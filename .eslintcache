[{"/Users/zoe/portfolio/weather-app/src/index.js":"1","/Users/zoe/portfolio/weather-app/src/App.js":"2","/Users/zoe/portfolio/weather-app/src/reportWebVitals.js":"3","/Users/zoe/portfolio/weather-app/src/components/weatherCard.jsx":"4","/Users/zoe/portfolio/weather-app/src/components/citySelector.jsx":"5","/Users/zoe/portfolio/weather-app/src/apis/config.js":"6","/Users/zoe/portfolio/weather-app/src/components/weatherList.jsx":"7","/Users/zoe/portfolio/weather-app/src/hooks/useFetch.jsx":"8","/Users/zoe/portfolio/weather-app/src/components/addFavorite.jsx":"9","/Users/zoe/portfolio/weather-app/src/components/favoritesList.jsx":"10"},{"size":500,"mtime":1611825345354,"results":"11","hashOfConfig":"12"},{"size":1333,"mtime":1611978962362,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1611825345355,"results":"14","hashOfConfig":"12"},{"size":1867,"mtime":1611980874898,"results":"15","hashOfConfig":"12"},{"size":868,"mtime":1611980762484,"results":"16","hashOfConfig":"12"},{"size":122,"mtime":1611827466140,"results":"17","hashOfConfig":"12"},{"size":704,"mtime":1611978877630,"results":"18","hashOfConfig":"12"},{"size":1104,"mtime":1611881690539,"results":"19","hashOfConfig":"12"},{"size":463,"mtime":1611879729370,"results":"20","hashOfConfig":"12"},{"size":445,"mtime":1611978371550,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"c9v7e4",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},"/Users/zoe/portfolio/weather-app/src/index.js",[],["44","45"],"/Users/zoe/portfolio/weather-app/src/App.js",["46","47"],"/Users/zoe/portfolio/weather-app/src/reportWebVitals.js",[],"/Users/zoe/portfolio/weather-app/src/components/weatherCard.jsx",["48","49"],"/Users/zoe/portfolio/weather-app/src/components/citySelector.jsx",[],"/Users/zoe/portfolio/weather-app/src/apis/config.js",[],"/Users/zoe/portfolio/weather-app/src/components/weatherList.jsx",["50","51","52","53"],"/Users/zoe/portfolio/weather-app/src/hooks/useFetch.jsx",[],"/Users/zoe/portfolio/weather-app/src/components/addFavorite.jsx",[],"/Users/zoe/portfolio/weather-app/src/components/favoritesList.jsx",["54"],"import React from 'react'\nimport { CardColumns, Row } from 'react-bootstrap'\nimport WeatherList from './weatherList'\nimport {API_KEY, API_BASE_URL} from '.././apis/config'\n\n// gets an array of string containing city name as input\nconst FavoritesList = (props) => {\n    const {favorites} = props\n    var favoritesData = [] // array of json objects \n    \n    Promise.all(favorites.map( city => fetch(`${API_BASE_URL}/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`)))\n    .then ( response =>  Promise.all(response.map(v => v.json())) )\n        .then( (result) => {\n            favoritesData = result\n            console.log(favoritesData)\n            return favoritesData\n            // append json object to existing json object array\n        }\n    )\n\n    return (\n        <Row>\n            <CardColumns>\n                {favoritesData.map( weather => {\n                    <WeatherList weathers={weather}/>\n                })}\n            </CardColumns>\n        </Row>\n    )\n}\n\nexport default FavoritesList;",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":4,"column":9,"nodeType":"61","messageId":"62","endLine":4,"endColumn":18},{"ruleId":"59","severity":1,"message":"63","line":16,"column":9,"nodeType":"61","messageId":"62","endLine":16,"endColumn":19},{"ruleId":"59","severity":1,"message":"64","line":2,"column":15,"nodeType":"61","messageId":"62","endLine":2,"endColumn":18},{"ruleId":"59","severity":1,"message":"65","line":2,"column":20,"nodeType":"61","messageId":"62","endLine":2,"endColumn":23},{"ruleId":"59","severity":1,"message":"66","line":2,"column":10,"nodeType":"61","messageId":"62","endLine":2,"endColumn":21},{"ruleId":"59","severity":1,"message":"67","line":2,"column":23,"nodeType":"61","messageId":"62","endLine":2,"endColumn":29},{"ruleId":"59","severity":1,"message":"64","line":2,"column":31,"nodeType":"61","messageId":"62","endLine":2,"endColumn":34},{"ruleId":"59","severity":1,"message":"68","line":4,"column":8,"nodeType":"61","messageId":"62","endLine":4,"endColumn":19},{"ruleId":"69","severity":1,"message":"70","line":24,"column":45,"nodeType":"71","messageId":"72","endLine":24,"endColumn":47},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'Jumbotron' is defined but never used.","Identifier","unusedVar","'getContent' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'CardColumns' is defined but never used.","'Button' is defined but never used.","'AddFavorite' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]